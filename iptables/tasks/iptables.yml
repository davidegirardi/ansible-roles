---

- name: Accept loopback traffic
  become: yes
  iptables:
    ip_version: 'ipv{{ ipversion | default("4") }}'
    chain: INPUT
    action: insert
    rule_num: '1'
    in_interface: lo
    jump: ACCEPT
  notify: 'save_ip{{ ipversion | default("4") }}tables'

- name: Accept RELATED, ESTABLISHED traffic
  become: yes
  iptables:
    ip_version: 'ipv{{ ipversion | default("4") }}'
    chain: INPUT
    action: insert
    rule_num: '1'
    ctstate: 'RELATED,ESTABLISHED'
    jump: ACCEPT
  notify: 'save_ip{{ ipversion | default("4") }}tables'

- name: Apply INPUT whitelisting
  become: yes
  iptables:
    ip_version: 'ipv{{ ipversion | default("4") }}'
    chain: '{{ item.value.chain }}'
    destination_port: '{{ item.value.port }}'
    protocol: '{{ item.value.protocol }}'
    jump: '{{ item.value.jump }}'
    state: '{{ item.value.state | default("present") }}'
  loop: '{{ custom_iptables_ports | dict2items }}'
  notify: 'save_ip{{ ipversion | default("4") }}tables'
  when: custom_iptables_ports is defined

- name: Permit ping
  become: yes
  iptables:
    ip_version: 'ipv{{ ipversion | default("4") }}'
    chain: INPUT
    protocol: "{{ 'icmpv6' if ipversion == 6 else 'icmp' | default('icmp')}}"
    icmp_type: echo-request
    jump: ACCEPT
  when: iptables_allow_ping
  notify: 'save_ip{{ ipversion | default("4") }}tables'

- name: INPUT policy to DROP
  become: yes
  iptables:
    ip_version: 'ipv{{ ipversion | default("4") }}'
    chain: INPUT
    policy: DROP
  notify: 'save_ip{{ ipversion | default("4") }}tables'

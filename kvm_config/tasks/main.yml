---

- name: Define Debian-based KVM packages
  set_fact:
    packages:
      present:
      - gir1.2-spiceclientgtk-3.0
      - dnsmasq
      - libvirt-clients
      - libvirt-daemon-system
      - qemu-kvm
      - qemu-utils
      - spice-client-gtk
  when: ansible_facts['os_family'] == "Debian" or ansible_facts['os_family'] == "Ubuntu"

- name: Define Arch-based KVM packages
  set_fact:
    packages:
      present:
        - bridge-utils
        - dnsmasq
        - libvirt
        - iptables-nft
        - qemu
        - virt-manager
        - virt-viewer
  when: ansible_facts['os_family'] == "Archlinux"

- name: Install packages
  include_role:
    name: install_packages

- name: Configure DNS resolution
  block:
  - name: Delete dnsmasq config directory for NetworkManager
    become: yes
    file:
      path: /etc/NetworkManager/dnsmasq.d
      state: absent
  - name: Disable dnsmasq resolution in NetworkManager
    become: yes
    file:
      path: /etc/NetworkManager/conf.d/10-kvm-dns.conf
      state: absent
    notify: 'reload_networkmanager'
  - name: Delete dnsmasq network-specific config file
    become: yes
    file:
      path: /etc/NetworkManager/dnsmasq.d/libvirtd_dnsmasq.conf
      state: absent
  - name: Enable systemd-resolved
    become: yes
    service:
      name: systemd-resolved
      enabled: yes
      state: started

  - name: Add libvirt_guest to nsswitch
    become: yes
    lineinfile:
      path: /etc/nsswitch.conf
      regexp: '^hosts:\s(?!libvirt_guest)(.*)$'
      line: 'hosts: libvirt_guest \1'
      backrefs: yes

- name: Run QEMU as low privileged user
  block:
    - name: Set the user
      become: yes
      lineinfile:
        path: /etc/libvirt/qemu.conf
        regexp: '^user = '
        line: 'user = "{{ qemu_user }}"'
      notify: 'restart_libvirtd'
    - name: Set the group
      become: yes
      lineinfile:
        path: /etc/libvirt/qemu.conf
        regexp: '^group = '
        line: 'group = "{{ qemu_group }}"'
      notify: 'restart_libvirtd'

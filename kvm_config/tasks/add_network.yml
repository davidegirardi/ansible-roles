---

- name: Required service
  become: yes
  service:
    name: libvirtd
    state: reloaded
    enabled: yes
  changed_when: false

- name: Define NAT virtual network
  become: yes
  virt_net:
    name: '{{ item.key }}'
    state: present
    xml: '{{ lookup("template", "templates/net.xml") }}'
  when: (item.value.isolated | default(false)) == false

- name: Define isolated virtual network
  become: yes
  virt_net:
    name: '{{ item.key }}'
    state: present
    xml: '{{ lookup("template", "templates/net.xml") }}'
  when: (item.value.isolated | default(false)) == true

- name: Autostart virtual network
  become: yes
  virt_net:
    autostart: yes
    name: '{{ item.key }}'

- name: Start virtual network
  become: yes
  virt_net:
    autostart: yes
    name: '{{ item.key }}'
    state: active

- name: Configure DNS resolution
  block:
  - name: Enable dnsmasq
    become: yes
    blockinfile:
      path: /etc/NetworkManager/conf.d/10-kvm-dns.conf
      create: yes
      mode: 0644
      block: |
        [main]
        dns=dnsmasq
    notify: 'reload_networkmanager'
  - name: Enable dnsmasq lookup for vm domain
    become: yes
    lineinfile:
      path: /etc/NetworkManager/dnsmasq.d/libvirtd_dnsmasq.conf
      line: server=/{{ item.value.dns_domain }}/{{ item.value.gw_ip }}
      create: yes
      mode: 0644
    notify: 'reload_networkmanager'
  - name: Disable systemd-resolved
    become: yes
    service:
      name: systemd-resolved
      enabled: no
      state: stopped
  - name: Use dnsmasq for name resolution
    become: yes
    lineinfile:
      path: /etc/resolv.conf
      regexp: '^nameserver'
      line: nameserver 127.0.1.1
    when: ansible_facts['os_family'] == "Debian" or ansible_facts['os_family'] == "Ubuntu"


- name: Allow bridging
  block:
  - name: Create qemu directory
    become: yes
    file:
      path: /etc/qemu
      state: directory
      mode: 0755
  - name: Configure bridging
    become: yes
    lineinfile:
      path: /etc/qemu/bridge.conf
      line: allow {{ item.value.bridge }}
      create: yes
      mode: 0644
  - name: Set permissions for bridge-helper
    become: yes
    file:
      path: /usr/lib/qemu/qemu-bridge-helper
      mode: +s

